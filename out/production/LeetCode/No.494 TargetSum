/**
You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols + and -. For each integer, you should choose one from + and - as its new symbol.

Find out how many ways to assign symbols to make sum of integers equal to target S.

Example 1:
Input: nums is [1, 1, 1, 1, 1], S is 3. 
Output: 5
Explanation: 

-1+1+1+1+1 = 3
+1-1+1+1+1 = 3
+1+1-1+1+1 = 3
+1+1+1-1+1 = 3
+1+1+1+1-1 = 3

There are 5 ways to assign symbols to make the sum of nums be target 3.

解题思路：
数组为 a = {a1,a2,...,an}
使子数组sub之和为s
 dp[i]表示和为i时的sub数目
 那么对所有的s,dp[s] = dp[s-a1]+dp[s-a2]+...+dp[s-an]
 对所有的ai(i<=n),我们总有
 dp[k] = dp[k-ai] + dp [k]
 dp[k+1] = dp[k+1-ai] + dp[k+1]
 ...
 dp[s] = dp[s-ai] + dp[s]
 
*/

public class Solution {
   public int findTargetSumWays(int[] nums, int s) {
        int sum = 0;
        for (int n : nums)
            sum += n;
        return sum < s || (s + sum) % 2 > 0 ? 0 : subsetSum(nums, (s + sum) >>> 1); 
    }   

    public int subsetSum(int[] nums, int s) {
        int[] dp = new int[s + 1]; 
        dp[0] = 1;
        for (int n : nums)
            for (int i = s; i >= n; i--)
                dp[i] += dp[i - n]; 
        return dp[s];
    }
}


